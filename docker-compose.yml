
version: '3.8'

services:
  vote:
    build: ./vote
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - frontend
      - backend

  result:
    build: ./result
    ports:
      - "5001:80"
    networks:
      - frontend
      - backend

  worker:
    build: ./worker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
    networks:
      - backend

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    networks:
      - backend

  jenkins:
    build: ./jenkins
    container_name: jenkins-docker
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  jenkins_home:


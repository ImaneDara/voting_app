version: '3.8'

services:
  vote:
    build: ./vote
    ports:
      - "8097:80"
    depends_on:
      - redis
    networks:
      - backend
      - frontend
    restart: always

  result:
    build: ./result
    ports:
      - "8096:80"
    depends_on:
      - db
    networks:
      - frontend
      - backend
    restart: always

  worker:
    build: ./worker
    depends_on:
      - redis
      - db
    networks:
      - backend
    restart: always

  redis:
    image: redis:alpine
    networks:
      - backend

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

  jenkins:
    build: ./jenkins
    ports:
      - "8080:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend

volumes:
  db_data:
  jenkins_home:

networks:
  frontend:
  backend:

